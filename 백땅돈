--Loading Lib And Window
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "백날 땅파봐라, 돈 나오냐?",
    LoadingTitle = "백날 땅파봐라, 돈 나오냐?",
    LoadingSubtitle = "✅ㅣSupport Game!",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Neogul Hub"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided",
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })


 --AutoFarm Tab
 local Dig = false

 local Material = nil

 local AutoFarmTab = Window:CreateTab("🎭 오토팜", nil) -- Title, Image

 local AutoFarmSection1 = AutoFarmTab:CreateSection("선택")

 local SelectDropdown = AutoFarmTab:CreateDropdown({
    Name = "재질 선택",
    Options = {"흙","돌","화강암","석영","탄탈라이트"},
    CurrentOption = {"흙"},
    MultipleOptions = false,
    Flag = "Material",
    Callback = function(Option)
        Material = unpack(Option)
    end,
 })

 local AutoFarmToggle = AutoFarmTab:CreateToggle({
    Name = "오토팜",
    CurrentValue = false,
    Flag = "AutoFarmToggle", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        if Value and Material ~= nil then
            Dig = true
            Rayfield:Notify({
                Title = "성공",
                Content = Material.." 을/를 성공 적 으로 활성화 했습니다",
                Duration = 2,
                Image = 4483362458,
             }) 
             if Material == "흙" then
                while Dig do
                    task.wait(.1)
local ohInstance1 = game:GetService("Players").LocalPlayer
local ohInstance2 = workspace.FIELD_VIP_1[utf8.char(55129, 54596, 46300)][utf8.char(55129)]

game:GetService("ReplicatedStorage").DigRemote:FireServer(ohInstance1, ohInstance2)
                end
                elseif Material == "돌" then
                while Dig do
                    task.wait(.1)

local ohInstance1 = game:GetService("Players").LocalPlayer
local ohInstance2 = workspace.FIELD_VIP_1[utf8.char(46028, 54596, 46300)][utf8.char(46028)]

game:GetService("ReplicatedStorage").DigRemote:FireServer(ohInstance1, ohInstance2)
                end
                elseif "화강암" then
                while Dig do
                    task.wait(.1)

local ohInstance1 = game:GetService("Players").LocalPlayer
local ohInstance2 = workspace.FIELD_VIP_1[utf8.char(54868, 44053, 50516, 54596, 46300)][utf8.char(54868, 44053, 50516)]

game:GetService("ReplicatedStorage").DigRemote:FireServer(ohInstance1, ohInstance2)
                end
                elseif "석영" then
                while Dig do
                    task.wait(.1)
local ohInstance1 = game:GetService("Players").LocalPlayer
local ohInstance2 = workspace.MAP_2.FIELD_2_2[utf8.char(49437, 50689, 54596, 46300)][utf8.char(49437, 50689)]

game:GetService("ReplicatedStorage").DigRemote:FireServer(ohInstance1, ohInstance2)
                end
                elseif "탄탈라이트" then
                while Dig do
                    task.wait(.1)
local ohInstance1 = game:GetService("Players").LocalPlayer
local ohInstance2 = workspace.MAP_2.FIELD_2_2[utf8.char(53444, 53448, 46972, 51060, 53944, 54596, 46300)][utf8.char(49437, 50689)]

game:GetService("ReplicatedStorage").DigRemote:FireServer(ohInstance1, ohInstance2)
                end
             end
            else
            Dig = false
        end
    end,
 })
